<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
          http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
          http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <int:message-history/>

    <rabbit:connection-factory id="rabbitConnectionFactory"
                               username="${rabbit.username}" password="${rabbit.password}" host="${rabbit.host:5672}"
                               port="${rabbit.port}" channel-cache-size="${rabbit.channel.cache.size:1}"
                               virtual-host="${rabbit.virtual.host:/}"/>


    <!-- Use AOP to add Logging to Spring AMQP classes -->
    <bean id="loggingAspect" class="com.chariotsolutions.rabbitmq.aspects.LoggingAspect"/>
    <aop:aspectj-autoproxy proxy-target-class="true">
        <aop:include name="loggingAspect"/>
    </aop:aspectj-autoproxy>

    <!-- *****************************************************
   Set up JMX Management
   @See org.springframework.amqp.rabbit.core.RabbitAdmin
   ***************************************************** -->
    <rabbit:admin id="rabbitAdmin" connection-factory="rabbitConnectionFactory"
                  auto-startup="true"/>

    <rabbit:queue id="rabbitRequestQueue" name="${rabbitdemo.requestQueue}"/>
    <rabbit:queue id="rabbitResponseQueue" name="${rabbitdemo.responseQueue}"/>
    <rabbit:queue id="rabbitErrorQueue" name="${rabbitdemo.errorQueue}"/>

    <rabbit:direct-exchange name="${rabbitdemo.message.exchange}">
        <rabbit:bindings>
            <rabbit:binding queue="${rabbitdemo.requestQueue}"
                            key="${rabbitdemo.message.routing.key}"/>
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:template id="rabbitTemplate"
                     queue="${rabbitdemo.requestQueue}" connection-factory="rabbitConnectionFactory"
                     routing-key="${rabbitdemo.message.routing.key}" reply-timeout="1000"/>

    <!-- *** STEP 1 *** Gateway receives msg from code -->

    <!-- *** STEP 2 *** Gateway puts payload on "requestChannel" -->
    <int:channel id="requestChannel">
        <int:interceptors>
            <int:wire-tap channel="msgLogger"/>
        </int:interceptors>
    </int:channel>

    <!-- *** Response *** Returned expected on "responseChannel" -->
    <int:channel id="responseChannel">
        <int:queue/>
        <int:interceptors>
            <int:wire-tap channel="msgLogger"/>
        </int:interceptors>
    </int:channel>
    <int:logging-channel-adapter id="msgLogger"
                                 level="DEBUG" log-full-message="true"/>

    <!-- *** Error Response *** Returned expected on "errorChannel" -->
    <int:channel id="errorChannel">
        <int:interceptors>
            <int:wire-tap channel="errorLogger"/>
        </int:interceptors>
    </int:channel>

    <!-- *** STEP 3 *** AMQP Gateway sends payload from "requestChannel" -->
    <!-- Rabbit Gateways (instead of channel adapters) for Remote Messaging
 - gDickens 11-Aug-11 -->
    <amqp:outbound-gateway id="amqpOutboundGateway"
                           request-channel="requestChannel"
                           reply-channel="responseChannel" amqp-template="rabbitTemplate"
                           exchange-name="${rabbitdemo.message.exchange}"
                           routing-key="${rabbitdemo.message.routing.key}"/>

    <!-- *** Error Response *** AMQP Gateway processes messages from the "Error
   Channel" -->
    <amqp:inbound-gateway id="amqpErrorGateway" request-channel="errorLogger"
                          connection-factory="rabbitConnectionFactory" queue-names="${rabbitdemo.errorQueue}"/>

    <int:logging-channel-adapter id="errorLogger"
                                 level="DEBUG" log-full-message="true"/>


    <int:gateway id="rabbitGateway" default-request-channel="requestChannel" default-reply-channel="responseChannel"
                 error-channel="errorChannel" service-interface="com.chariotsolutions.rabbitmq.rabbit.RabbitGateway"/>


    <!--&lt;!&ndash; *** Step 4 *** AMQP Gateway receives messages from Rabbit &ndash;&gt;-->
    <!--<amqp:inbound-gateway id="amqpInboundGateway"-->
    <!--request-channel="requestChannel" reply-channel="responseChannel"-->
    <!--connection-factory="rabbitConnectionFactory" queue-names="${rabbitdemo.requestQueue}"/>-->


</beans>

